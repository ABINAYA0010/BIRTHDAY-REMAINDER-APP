{"version":3,"sources":["Countdown.jsx","Birthday.jsx","List.jsx","Alert.jsx","App.jsx","index.jsx"],"names":["Countdown","_ref","name","day","month","countdownData","presentDate","Date","getDate","parseInt","getMonth","React","createElement","className","days","hours","minutes","seconds","Birthday","age","state","setState","useState","isItBday","currentTime","currentYear","getFullYear","useEffect","interval","setInterval","prevState","countdown","dateAtm","birthdayDay","getTime","timeRemaining","Math","floor","clearInterval","List","people","removePerson","editPerson","today","setAmount","filteredData","filter","person","moment","date","format","length","birthday","Fragment","map","id","image","key","src","alt","onError","e","target","aria-label","onClick","href","FaEdit","size","FaTrash","Alert","type","msg","removeAlert","timeout","setTimeout","clearTimeout","App","info","setInfo","imagePreview","setImagePreview","setToday","amount","setPeople","localStorage","getItem","JSON","parse","isEditing","setIsEditing","editId","setEditId","alert","setAlert","show","showAlert","arguments","undefined","calculate_age","dob","m1","m2","duration","diff","humanize","setItem","stringify","Object","assign","onSubmit","preventDefault","newItem","toString","reset","placeholder","value","onChange","DatePicker","placeholderText","selected","maxDate","dateFormat","orientation","isClearable","showMonthDropdown","showYearDropdown","scrollableMonthYearDropdown","accept","file","files","reader","FileReader","onloadend","result","readAsDataURL","FaCalendar","specificPerson","find","clearList","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.71ef7c11.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Countdown = ({ name, day, month, countdownData }) => {\r\n  const presentDate = new Date();\r\n  if (\r\n    presentDate.getDate() === parseInt(day) &&\r\n    presentDate.getMonth() === parseInt(month) - 1\r\n  ) {\r\n    return (\r\n      <div className=\"wish\">\r\n        <p>\r\n          It's time to celebrate <span className=\"name\">{name}</span>'s\r\n          birthday.\r\n        </p>\r\n        <p>\r\n          <strong>\r\n            Wish <span className=\"name\">{name}</span>\r\n          </strong>\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className=\"countdown-wrapper\">\r\n          <div className=\"countdown-box\">\r\n            {countdownData.days}\r\n            <span className=\"legend\">Days</span>\r\n          </div>\r\n          <div className=\"countdown-box\">\r\n            {countdownData.hours}\r\n            <span className=\"legend\">Hrs</span>\r\n          </div>\r\n          <div className=\"countdown-box\">\r\n            {countdownData.minutes}\r\n            <span className=\"legend\">Mins</span>\r\n          </div>\r\n          <div className=\"countdown-box\">\r\n            {countdownData.seconds}\r\n            <span className=\"legend\">Sec</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Countdown;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Countdown from \"./Countdown\";\r\n\r\nconst Birthday = ({ name, age, day, month }) => {\r\n  const [state, setState] = useState({\r\n    seconds: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    days: 0,\r\n    isItBday: false,\r\n  });\r\n\r\n  const currentTime = new Date();\r\n  const currentYear = currentTime.getFullYear();\r\n  const isItBday =\r\n    currentTime.getDate() === day && currentTime.getMonth() === month - 1;\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const countdown = () => {\r\n        const dateAtm = new Date();\r\n        let birthdayDay = new Date(currentYear, month - 1, day);\r\n        if (dateAtm > birthdayDay) {\r\n          birthdayDay = new Date(currentYear + 1, month - 1, day);\r\n        } else if (dateAtm.getFullYear() === birthdayDay.getFullYear() + 1) {\r\n          birthdayDay = new Date(currentYear, month - 1, day);\r\n        }\r\n\r\n        const currentTime = dateAtm.getTime();\r\n        const birthdayTime = birthdayDay.getTime();\r\n        const timeRemaining = birthdayTime - currentTime;\r\n\r\n        let seconds = Math.floor(timeRemaining / 1000);\r\n        let minutes = Math.floor(seconds / 60);\r\n        let hours = Math.floor(minutes / 60);\r\n        let days = Math.floor(hours / 24);\r\n\r\n        seconds %= 60;\r\n        minutes %= 60;\r\n        hours %= 24;\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          seconds,\r\n          minutes,\r\n          hours,\r\n          days,\r\n          isItBday,\r\n        }));\r\n      };\r\n      if (!isItBday) {\r\n        countdown();\r\n      } else {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isItBday: true,\r\n        }));\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [currentYear, day, isItBday, month]);\r\n\r\n  return (\r\n    <div>\r\n      <Countdown name={name} day={day} month={month} countdownData={state} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Birthday;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Birthday from \"./Birthday\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\n\r\nconst List = ({ people, removePerson, editPerson, today, setAmount }) => {\r\n  let filteredData = people.filter((person) => {\r\n    const presentDate = new Date();\r\n\r\n    return (\r\n      presentDate.getDate() === parseInt(moment(person.date).format(\"D\")) &&\r\n      presentDate.getMonth() === parseInt(moment(person.date).format(\"M\")) - 1\r\n    );\r\n  });\r\n  setAmount(filteredData.length);\r\n  const birthday = today === true ? filteredData : people;\r\n  return (\r\n    <>\r\n      {today === true && birthday.length === 0 ? (\r\n        <div className=\"no-birthday-today\">No birthdays today</div>\r\n      ) : (\r\n        birthday.map((person) => {\r\n          const { id, name, age, date, image } = person;\r\n          return (\r\n            <article key={id} className=\"person\">\r\n              <img\r\n                src={image}\r\n                alt={name}\r\n                onError={(e) =>\r\n                  (e.target.src = `https://avatars.dicebear.com/api/initials/${name}.svg`)\r\n                }\r\n              />\r\n              <div className=\"person-info\">\r\n                <h4>{name}</h4>\r\n                <p>{moment(date).format(\"MMM Do YYYY\")}</p>\r\n                <p>{age}</p>\r\n                <Birthday\r\n                  name={name}\r\n                  age={age}\r\n                  day={moment(date).format(\"D\")}\r\n                  month={moment(date).format(\"M\")}\r\n                />\r\n              </div>\r\n              <div className=\"btns\" aria-label=\"Edit\">\r\n                <button className=\"btn\" onClick={() => editPerson(id)}>\r\n                  <a href=\"#edit\">\r\n                    <FaEdit size=\"20\" />\r\n                  </a>\r\n                </button>\r\n                <button className=\"btn\" aria-label=\"Delete\">\r\n                  <FaTrash size=\"20\" onClick={() => removePerson(id)} />\r\n                </button>\r\n              </div>\r\n            </article>\r\n          );\r\n        })\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport default function Alert({ type, msg, removeAlert, people }) {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      removeAlert();\r\n    }, 3000);\r\n    return () => clearTimeout(timeout);\r\n  }, [people, removeAlert]);\r\n  return <p className={`alert alert-${type}`}>{msg}</p>;\r\n}\r\n","import \"./styles.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport { FaCalendar } from \"react-icons/fa\";\r\nimport \"moment-precise-range-plugin\";\r\nimport List from \"./List\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst getLocalStorage = () => {\r\n  let people = localStorage.getItem(\"people\");\r\n  if (people) {\r\n    return JSON.parse(localStorage.getItem(\"people\"));\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  const [info, setInfo] = useState({\r\n    image: \"\",\r\n    name: \"\",\r\n    age: \"\",\r\n    date: null,\r\n  });\r\n  const [imagePreview, setImagePreview] = useState(\"\");\r\n  const [today, setToday] = useState(false);\r\n  const [amount, setAmount] = useState(0);\r\n  const [people, setPeople] = useState(getLocalStorage());\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editId, setEditId] = useState(null);\r\n  const [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\r\n\r\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\r\n    setAlert({ show, type, msg });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n        setInfo({ ...info, image: reader.result });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setImagePreview(\"\");\r\n      setInfo({ ...info, image: \"\" });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (info.date) {\r\n      info.age = calculate_age(info.date);\r\n    }\r\n    if (!info.name || !info.image || !info.age) {\r\n      showAlert(true, \"danger\", \"please enter details\");\r\n    } else if (info.name && info.image && info.date && isEditing) {\r\n      setPeople(\r\n        people.map((person) => {\r\n          if (person.id === editId) {\r\n            return {\r\n              ...person,\r\n              name: info.name,\r\n              image: info.image,\r\n              date: info.date,\r\n              age: calculate_age(info.date),\r\n            };\r\n          }\r\n          return person;\r\n        })\r\n      );\r\n      setInfo({ image: \"\", name: \"\", age: \"\", date: null });\r\n      setImagePreview(\"\");\r\n      setEditId(null);\r\n      setIsEditing(false);\r\n      showAlert(true, \"success\", \"details changed\");\r\n    } else {\r\n      showAlert(true, \"success\", \"person added to list\");\r\n      const newItem = {\r\n        id: new Date().getTime().toString(),\r\n        image: info.image,\r\n        name: info.name,\r\n        age: info.age,\r\n        date: info.date,\r\n      };\r\n      setPeople([...people, newItem]);\r\n      e.target.reset();\r\n      setInfo({ image: \"\", name: \"\", age: \"\", date: null });\r\n      setImagePreview(\"\");\r\n    }\r\n  };\r\n\r\n  const calculate_age = (dob) => {\r\n    var m1 = moment(new Date(dob), \"DD-MM-YYYY HH:mm:ss\");\r\n    var m2 = moment(new Date(), \"DD-MM-YYYY HH:mm:ss\");\r\n    var diff = moment.duration(m1.diff(m2)).humanize();\r\n    return diff;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setInfo({ ...info, [name]: value });\r\n  };\r\n\r\n  const removePerson = (id) => {\r\n    showAlert(true, \"danger\", \"person removed\");\r\n    setPeople(people.filter((person) => person.id !== id));\r\n  };\r\n\r\n  const clearList = () => {\r\n    showAlert(true, \"danger\", \"everything cleared\");\r\n    setPeople([]);\r\n  };\r\n\r\n  const editPerson = (id) => {\r\n    const specificPerson = people.find((person) => person.id === id);\r\n    setIsEditing(true);\r\n    setEditId(id);\r\n    setInfo({\r\n      image: specificPerson.image,\r\n      name: specificPerson.name,\r\n      date: specificPerson.date,\r\n    });\r\n    setImagePreview(specificPerson.image);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"people\", JSON.stringify(people));\r\n  }, [people]);\r\n\r\n  return (\r\n    <main className=\"app\">\r\n      <div className=\"reminder\">\r\n        <section id=\"edit\" className=\"container\">\r\n          <h3 className=\"title\">birthday reminder</h3>\r\n          {alert.show && (\r\n            <Alert {...alert} removeAlert={showAlert} people={people} />\r\n          )}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-control\">\r\n              <input\r\n                className=\"list\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                value={info.name}\r\n                onChange={handleChange}\r\n              />\r\n              <DatePicker\r\n                className=\"list\"\r\n                placeholderText=\"dob - mm/dd/yyyy\"\r\n                selected={info.date ? new Date(info.date) : null}\r\n                onChange={(date) => setInfo({ ...info, date: date })}\r\n                maxDate={new Date()}\r\n                dateFormat=\"MM/dd/yyyy\"\r\n                orientation=\"bottom\"\r\n                isClearable\r\n                showMonthDropdown\r\n                showYearDropdown\r\n                scrollableMonthYearDropdown\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                className=\"list\"\r\n                onChange={handleImageChange}\r\n              />\r\n              {imagePreview && (\r\n                <img\r\n                  src={imagePreview}\r\n                  alt=\"Preview\"\r\n                  className=\"image-preview\"\r\n                />\r\n              )}\r\n              <button className=\"add-btn\" type=\"submit\">\r\n                {isEditing ? \"update\" : \"add\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </div>\r\n      {people.length > 0 && (\r\n        <div className=\"birthdays\">\r\n          <div className=\"birthday-list\">\r\n            <h3>\r\n              {people.length} {people.length > 1 ? \"birthdays\" : \"birthday\"} in\r\n              the list\r\n            </h3>\r\n            <button\r\n              className={`today-${today}`}\r\n              onClick={() => setToday(!today)}\r\n            >\r\n              <FaCalendar size=\"20\" />\r\n              <div className=\"today-count\">\r\n                <p className=\"total-count\">{amount}</p>\r\n              </div>\r\n            </button>\r\n            <List\r\n              people={people}\r\n              removePerson={removePerson}\r\n              editPerson={editPerson}\r\n              today={today}\r\n              setAmount={setAmount}\r\n            />\r\n            <button className=\"clear-btn\" onClick={clearList}>\r\n              clear all\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n","import React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);"],"sourceRoot":""}